# Generated by Django 4.2.7 on 2023-11-19 14:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_played', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='main.category')),
            ],
            options={
                'verbose_name': 'состояние категории',
                'verbose_name_plural': 'состояние категорий',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('W', 'Waiting for players'), ('A', 'Game is active'), ('F', 'Game is finished')], default='W', max_length=1)),
                ('timer', models.PositiveSmallIntegerField(default=10)),
                ('text_answer_timer', models.PositiveIntegerField(default=30)),
                ('lobby_code', models.CharField(default='HR0fM2STJK', max_length=29)),
                ('current_playing_category_id', models.IntegerField(blank=True, null=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='main.quiz')),
            ],
            options={
                'verbose_name': 'игровая сессия',
                'verbose_name_plural': 'игровые сессий',
            },
        ),
        migrations.CreateModel(
            name='PlayerAvatar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/game/avatars/')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(default=0)),
                ('is_online', models.BooleanField(default=True)),
                ('player_name', models.CharField(blank=True, max_length=25, null=True)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='game.playeravatar')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='game.game')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'игрок',
                'verbose_name_plural': 'игроки',
            },
        ),
        migrations.CreateModel(
            name='QuestionState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_asked', models.BooleanField(default=False)),
                ('current', models.BooleanField(default=False)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_states', to='game.categorystate')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_states', to='game.game')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='main.question')),
            ],
            options={
                'verbose_name': 'состояние вопроса',
                'verbose_name_plural': 'состояние вопросов',
            },
        ),
        migrations.CreateModel(
            name='TextAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=100)),
                ('is_correct', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_answers', to='game.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_answers', to='game.playerstat')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_answers', to='game.questionstate')),
            ],
            options={
                'verbose_name': 'устный ответ',
                'verbose_name_plural': 'устные ответы',
            },
        ),
        migrations.CreateModel(
            name='OptionState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', models.ManyToManyField(to='game.playerstat')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option_states', to='game.game')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='main.option')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option_states', to='game.questionstate')),
            ],
            options={
                'verbose_name': 'состояние варианта ответа',
                'verbose_name_plural': 'состояние вариантов ответа',
            },
        ),
        migrations.AddField(
            model_name='categorystate',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_states', to='game.game'),
        ),
    ]
